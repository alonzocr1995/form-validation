{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nconst initialState = {\n  value: \"\",\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  return initialState;\n};\n\nconst useBasicInput = validateInput => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialState); //   const [enteredValue, setEnteredValue] = useState(\"\");\n  //   const [isTouched, setIsTouched] = useState(false);\n\n  const isValid = validateInput(inputState.value);\n  const hasError = !isValid && isTouched;\n\n  const handleInputChange = e => {\n    setEnteredValue(e.target.value);\n  };\n\n  const handleInputBlur = () => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isTouched,\n    isValid,\n    hasError,\n    handleInputBlur,\n    handleInputChange,\n    reset\n  };\n};\n\n_s(useBasicInput, \"WTVy3W/BBpinEIavl2C9EMTzZQQ=\");\n\nexport default useBasicInput;","map":{"version":3,"sources":["C:/Users/alonz/OneDrive/Escritorio/Udemy React/section 16 forms/src/hooks/useBasicInput.js"],"names":["useReducer","initialState","value","isTouched","inputStateReducer","state","action","useBasicInput","validateInput","inputState","dispatch","isValid","hasError","handleInputChange","e","setEnteredValue","target","handleInputBlur","setIsTouched","reset","enteredValue"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAOL,YAAP;AACD,CAFD;;AAIA,MAAMM,aAAa,GAAIC,aAAD,IAAmB;AAAA;;AACvC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBV,UAAU,CAACI,iBAAD,EAAoBH,YAApB,CAAzC,CADuC,CAEvC;AACA;;AACA,QAAMU,OAAO,GAAGH,aAAa,CAACC,UAAU,CAACP,KAAZ,CAA7B;AACA,QAAMU,QAAQ,GAAG,CAACD,OAAD,IAAYR,SAA7B;;AAEA,QAAMU,iBAAiB,GAAIC,CAAD,IAAO;AAC/BC,IAAAA,eAAe,CAACD,CAAC,CAACE,MAAF,CAASd,KAAV,CAAf;AACD,GAFD;;AAGA,QAAMe,eAAe,GAAG,MAAM;AAC5BC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMC,KAAK,GAAG,MAAM;AAClBJ,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAG,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,SAAO;AACLhB,IAAAA,KAAK,EAAEkB,YADF;AAELjB,IAAAA,SAFK;AAGLQ,IAAAA,OAHK;AAILC,IAAAA,QAJK;AAKLK,IAAAA,eALK;AAMLJ,IAAAA,iBANK;AAOLM,IAAAA;AAPK,GAAP;AASD,CA5BD;;GAAMZ,a;;AA8BN,eAAeA,aAAf","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  value: \"\",\r\n  isTouched: false,\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n  return initialState;\r\n};\r\n\r\nconst useBasicInput = (validateInput) => {\r\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialState);\r\n  //   const [enteredValue, setEnteredValue] = useState(\"\");\r\n  //   const [isTouched, setIsTouched] = useState(false);\r\n  const isValid = validateInput(inputState.value);\r\n  const hasError = !isValid && isTouched;\r\n\r\n  const handleInputChange = (e) => {\r\n    setEnteredValue(e.target.value);\r\n  };\r\n  const handleInputBlur = () => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setEnteredValue(\"\");\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isTouched,\r\n    isValid,\r\n    hasError,\r\n    handleInputBlur,\r\n    handleInputChange,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useBasicInput;\r\n"]},"metadata":{},"sourceType":"module"}