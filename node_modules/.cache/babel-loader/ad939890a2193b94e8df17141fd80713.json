{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { isValidElement, useState } from \"react\";\n\nconst useInput = validateValue => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const handleValueChange = e => {\n    setEnteredValue(e.target.value);\n  };\n\n  const handleInputBlur = () => {\n    setIsTouched(true);\n  };\n\n  const resetForm = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    hasError,\n    isValid: valueIsValid,\n    isTouched,\n    handleInputBlur,\n    handleValueChange,\n    resetForm\n  };\n};\n\n_s(useInput, \"qlnmfbTzj9Q0H+uTzI/AGYgwaf8=\");\n\nexport default useInput;","map":{"version":3,"sources":["C:/Users/alonz/OneDrive/Escritorio/Udemy React/section 16 forms/src/hooks/useInput.js"],"names":["isValidElement","useState","useInput","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasError","handleValueChange","e","target","value","handleInputBlur","resetForm","isValid"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,QAAzB,QAAyC,OAAzC;;AAEA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAClC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMO,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBF,SAAlC;;AAEA,QAAMI,iBAAiB,GAAIC,CAAD,IAAO;AAC/BN,IAAAA,eAAe,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5BP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMQ,SAAS,GAAG,MAAM;AACtBV,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,SAAO;AACLM,IAAAA,KAAK,EAAET,YADF;AAELK,IAAAA,QAFK;AAGLO,IAAAA,OAAO,EAAER,YAHJ;AAILF,IAAAA,SAJK;AAKLQ,IAAAA,eALK;AAMLJ,IAAAA,iBANK;AAOLK,IAAAA;AAPK,GAAP;AASD,CA5BD;;GAAMb,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import { isValidElement, useState } from \"react\";\r\n\r\nconst useInput = (validateValue) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n  const valueIsValid = validateValue(enteredValue);\r\n  const hasError = !valueIsValid && isTouched;\r\n\r\n  const handleValueChange = (e) => {\r\n    setEnteredValue(e.target.value);\r\n  };\r\n\r\n  const handleInputBlur = () => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setEnteredValue(\"\");\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    hasError,\r\n    isValid: valueIsValid,\r\n    isTouched,\r\n    handleInputBlur,\r\n    handleValueChange,\r\n    resetForm,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}