{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alonz\\\\OneDrive\\\\Escritorio\\\\Udemy React\\\\section 16 forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, SetEnteredName] = useState(\"\");\n  const [isEnteredNameVaild, setIsEnteredNameVaild] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const handleInputChangeName = e => {\n    SetEnteredName(e.target.value);\n  };\n\n  const handleNameInputBlur = () => {\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setIsEnteredNameVaild(false);\n      return;\n    }\n  };\n\n  const handleFormSubmission = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setIsEnteredNameVaild(false);\n      return;\n    }\n\n    const enteredInputRefValue = nameInputRef.current.value;\n    console.log(enteredInputRefValue);\n    SetEnteredName(\"\");\n  };\n\n  const nameInputIsValid = !isEnteredNameVaild && enteredNameTouched;\n  const enteredNameInput = nameInputIsValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmission,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: enteredNameInput,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onBlur: handleNameInputBlur,\n        onChange: handleInputChangeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), nameInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"X4ljO/KcPymYEvYYz3aWRl/U3bE=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/alonz/OneDrive/Escritorio/Udemy React/section 16 forms/src/components/SimpleInput.js"],"names":["React","useRef","useState","SimpleInput","props","nameInputRef","enteredName","SetEnteredName","isEnteredNameVaild","setIsEnteredNameVaild","enteredNameTouched","setEnteredNameTouched","handleInputChangeName","e","target","value","handleNameInputBlur","trim","handleFormSubmission","preventDefault","enteredInputRefValue","current","console","log","nameInputIsValid","enteredNameInput"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,YAAY,GAAGJ,MAAM,EAA3B;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACQ,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,KAAD,CAA5D;;AAEA,QAAMU,qBAAqB,GAAIC,CAAD,IAAO;AACnCN,IAAAA,cAAc,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAGA,QAAMC,mBAAmB,GAAG,MAAM;AAChCL,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAIL,WAAW,CAACW,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BR,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;AACF,GAND;;AAOA,QAAMS,oBAAoB,GAAIL,CAAD,IAAO;AAClCA,IAAAA,CAAC,CAACM,cAAF;AACAR,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAIL,WAAW,CAACW,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BR,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AAED,UAAMW,oBAAoB,GAAGf,YAAY,CAACgB,OAAb,CAAqBN,KAAlD;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,oBAAZ;AACAb,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAXD;;AAaA,QAAMiB,gBAAgB,GAAG,CAAChB,kBAAD,IAAuBE,kBAAhD;AAEA,QAAMe,gBAAgB,GAAGD,gBAAgB,GACrC,sBADqC,GAErC,cAFJ;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEN,oBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEO,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,GAAG,EAAEpB,YADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,KAAK,EAAEC,WAJT;AAKE,QAAA,MAAM,EAAEU,mBALV;AAME,QAAA,QAAQ,EAAEJ;AANZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAYGY,gBAAgB,iBAAI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZvB,eAaE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAtDD;;GAAMrB,W;;KAAAA,W;AAwDN,eAAeA,WAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, SetEnteredName] = useState(\"\");\n  const [isEnteredNameVaild, setIsEnteredNameVaild] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const handleInputChangeName = (e) => {\n    SetEnteredName(e.target.value);\n  };\n  const handleNameInputBlur = () => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setIsEnteredNameVaild(false);\n      return;\n    }\n  };\n  const handleFormSubmission = (e) => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setIsEnteredNameVaild(false);\n      return;\n    }\n\n    const enteredInputRefValue = nameInputRef.current.value;\n    console.log(enteredInputRefValue);\n    SetEnteredName(\"\");\n  };\n\n  const nameInputIsValid = !isEnteredNameVaild && enteredNameTouched;\n\n  const enteredNameInput = nameInputIsValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={handleFormSubmission}>\n      <div className={enteredNameInput}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onBlur={handleNameInputBlur}\n          onChange={handleInputChangeName}\n        />\n      </div>\n      {nameInputIsValid && <p className=\"error-text\">Name must not be empty</p>}\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}