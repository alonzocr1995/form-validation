{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useBasicInput = validateInput => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const isValid = validateInput(enteredValue);\n  const hasError = !isValid && isTouched;\n\n  const handleInputChange = e => {\n    setEnteredValue(e.target.value);\n  };\n\n  const handleInputBlur = () => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isTouched,\n    isValid,\n    hasError,\n    handleInputBlur,\n    handleInputChange,\n    reset\n  };\n};\n\n_s(useBasicInput, \"qlnmfbTzj9Q0H+uTzI/AGYgwaf8=\");\n\nexport default useBasicInput;","map":{"version":3,"sources":["C:/Users/alonz/OneDrive/Escritorio/Udemy React/section 16 forms/src/hooks/useBasicInput.js"],"names":["useState","useBasicInput","validateInput","enteredValue","setEnteredValue","isTouched","setIsTouched","isValid","hasError","handleInputChange","e","target","value","handleInputBlur","reset"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,aAAa,GAAIC,aAAD,IAAmB;AAAA;;AACvC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMO,OAAO,GAAGL,aAAa,CAACC,YAAD,CAA7B;AACA,QAAMK,QAAQ,GAAG,CAACD,OAAD,IAAYF,SAA7B;;AAEA,QAAMI,iBAAiB,GAAIC,CAAD,IAAO;AAC/BN,IAAAA,eAAe,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD,GAFD;;AAGA,QAAMC,eAAe,GAAG,MAAM;AAC5BP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMQ,KAAK,GAAG,MAAM;AAClBV,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,SAAO;AACLM,IAAAA,KAAK,EAAET,YADF;AAELE,IAAAA,SAFK;AAGLE,IAAAA,OAHK;AAILC,IAAAA,QAJK;AAKLK,IAAAA,eALK;AAMLJ,IAAAA,iBANK;AAOLK,IAAAA;AAPK,GAAP;AASD,CA3BD;;GAAMb,a;;AA6BN,eAAeA,aAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useBasicInput = (validateInput) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n  const isValid = validateInput(enteredValue);\r\n  const hasError = !isValid && isTouched;\r\n\r\n  const handleInputChange = (e) => {\r\n    setEnteredValue(e.target.value);\r\n  };\r\n  const handleInputBlur = () => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setEnteredValue(\"\");\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isTouched,\r\n    isValid,\r\n    hasError,\r\n    handleInputBlur,\r\n    handleInputChange,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useBasicInput;\r\n"]},"metadata":{},"sourceType":"module"}