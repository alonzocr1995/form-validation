{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alonz\\\\OneDrive\\\\Escritorio\\\\Udemy React\\\\section 16 forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    enteredValue: enteredName,\n    isValid: enteredNameInputIsValid,\n    hasError: nameInputHasError,\n    handleValueChange: handleNameChange,\n    handleInputBlur: handleNameBlur\n  } = useInput(value => value.trim() !== \"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const nameInputIsInvalid = !enteredNameInputIsValid && enteredNameTouched;\n  const enteredEmailIsValid = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(enteredEmail);\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameInputIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const handleInputChangeName = e => {\n    setEnteredName(e.target.value);\n  };\n\n  const handleNameInputBlur = () => {\n    setEnteredNameTouched(true);\n  };\n\n  const handleInputChangeEmail = e => {\n    setEnteredEmail(e.target.value);\n  };\n\n  const handleEmailInputBlur = () => {\n    setEnteredEmailTouched(true);\n  };\n\n  const handleFormSubmission = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (enteredName.trim() === \"\" && enteredEmail.trim() === \"\") {\n      return;\n    }\n\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  const enteredNameClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const enteredEmailClasses = emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmission,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: enteredNameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onBlur: handleNameInputBlur,\n        onChange: handleInputChangeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: enteredEmailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmail,\n        onBlur: handleEmailInputBlur,\n        onChange: handleInputChangeEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Email must be input correctly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"oKTD2lyLMLvTxUWz7Pf8xddbh2A=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/alonz/OneDrive/Escritorio/Udemy React/section 16 forms/src/components/SimpleInput.js"],"names":["React","useState","useInput","SimpleInput","props","enteredValue","enteredName","isValid","enteredNameInputIsValid","hasError","nameInputHasError","handleValueChange","handleNameChange","handleInputBlur","handleNameBlur","value","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","nameInputIsInvalid","enteredNameTouched","enteredEmailIsValid","test","emailInputIsInvalid","formIsValid","handleInputChangeName","e","setEnteredName","target","handleNameInputBlur","setEnteredNameTouched","handleInputChangeEmail","handleEmailInputBlur","handleFormSubmission","preventDefault","enteredNameClasses","enteredEmailClasses"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInput from \"../hooks/useInput\";\n\nconst SimpleInput = (props) => {\n  const {\n    enteredValue: enteredName,\n    isValid: enteredNameInputIsValid,\n    hasError: nameInputHasError,\n    handleValueChange: handleNameChange,\n    handleInputBlur: handleNameBlur,\n  } = useInput((value) => value.trim() !== \"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const nameInputIsInvalid = !enteredNameInputIsValid && enteredNameTouched;\n  const enteredEmailIsValid =\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n      enteredEmail\n    );\n\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameInputIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const handleInputChangeName = (e) => {\n    setEnteredName(e.target.value);\n  };\n  const handleNameInputBlur = () => {\n    setEnteredNameTouched(true);\n  };\n\n  const handleInputChangeEmail = (e) => {\n    setEnteredEmail(e.target.value);\n  };\n  const handleEmailInputBlur = () => {\n    setEnteredEmailTouched(true);\n  };\n\n  const handleFormSubmission = (e) => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (enteredName.trim() === \"\" && enteredEmail.trim() === \"\") {\n      return;\n    }\n\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  const enteredNameClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const enteredEmailClasses = emailInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={handleFormSubmission}>\n      <div className={enteredNameClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onBlur={handleNameInputBlur}\n          onChange={handleInputChangeName}\n        />\n      </div>\n      {nameInputIsInvalid && (\n        <p className=\"error-text\">Name must not be empty</p>\n      )}\n      <div className={enteredEmailClasses}>\n        <label htmlFor=\"name\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={enteredEmail}\n          onBlur={handleEmailInputBlur}\n          onChange={handleInputChangeEmail}\n        />\n      </div>\n      {emailInputIsInvalid && (\n        <p className=\"error-text\">Email must be input correctly</p>\n      )}\n\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}