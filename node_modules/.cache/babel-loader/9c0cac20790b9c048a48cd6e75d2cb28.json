{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alonz\\\\OneDrive\\\\Escritorio\\\\Udemy React\\\\section 16 forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: enteredNameInputIsValid,\n    hasError: nameInputHasError,\n    handleValueChange: handleNameChange,\n    handleInputBlur: handleNameBlur,\n    resetForm: resetNameInput\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    handleValueChange: handleEmailChange,\n    handleInputBlur: handleEmailBlur,\n    resetForm: resetEmailInput\n  } = useInput(value => /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value));\n  let formIsValid = false;\n\n  if (enteredNameInputIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const handleFormSubmission = e => {\n    e.preventDefault();\n\n    if (!enteredNameInputIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const enteredNameClasses = nameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const enteredEmailClasses = emailInputHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmission,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: enteredNameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onBlur: handleNameBlur,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: enteredEmailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmail,\n        onBlur: handleEmailBlur,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Email must be input correctly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"E+GirDTqKMVpjCnXyXpeRi6mGt4=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/alonz/OneDrive/Escritorio/Udemy React/section 16 forms/src/components/SimpleInput.js"],"names":["React","useInput","SimpleInput","props","value","enteredName","isValid","enteredNameInputIsValid","hasError","nameInputHasError","handleValueChange","handleNameChange","handleInputBlur","handleNameBlur","resetForm","resetNameInput","trim","enteredEmail","enteredEmailIsValid","emailInputHasError","handleEmailChange","handleEmailBlur","resetEmailInput","test","formIsValid","handleFormSubmission","e","preventDefault","enteredNameClasses","enteredEmailClasses"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AACJC,IAAAA,KAAK,EAAEC,WADH;AAEJC,IAAAA,OAAO,EAAEC,uBAFL;AAGJC,IAAAA,QAAQ,EAAEC,iBAHN;AAIJC,IAAAA,iBAAiB,EAAEC,gBAJf;AAKJC,IAAAA,eAAe,EAAEC,cALb;AAMJC,IAAAA,SAAS,EAAEC;AANP,MAOFd,QAAQ,CAAEG,KAAD,IAAWA,KAAK,CAACY,IAAN,OAAiB,EAA7B,CAPZ;AASA,QAAM;AACJZ,IAAAA,KAAK,EAAEa,YADH;AAEJX,IAAAA,OAAO,EAAEY,mBAFL;AAGJV,IAAAA,QAAQ,EAAEW,kBAHN;AAIJT,IAAAA,iBAAiB,EAAEU,iBAJf;AAKJR,IAAAA,eAAe,EAAES,eALb;AAMJP,IAAAA,SAAS,EAAEQ;AANP,MAOFrB,QAAQ,CAAEG,KAAD,IACX,uEAAuEmB,IAAvE,CACEnB,KADF,CADU,CAPZ;AAaA,MAAIoB,WAAW,GAAG,KAAlB;;AAEA,MAAIjB,uBAAuB,IAAIW,mBAA/B,EAAoD;AAClDM,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,QAAMC,oBAAoB,GAAIC,CAAD,IAAO;AAClCA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAACpB,uBAAD,IAA4B,CAACW,mBAAjC,EAAsD;AACpD;AACD;;AAEDH,IAAAA,cAAc;AACdO,IAAAA,eAAe;AAChB,GATD;;AAWA,QAAMM,kBAAkB,GAAGnB,iBAAiB,GACxC,sBADwC,GAExC,cAFJ;AAIA,QAAMoB,mBAAmB,GAAGV,kBAAkB,GAC1C,sBAD0C,GAE1C,cAFJ;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEM,oBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEG,kBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,KAAK,EAAEvB,WAHT;AAIE,QAAA,MAAM,EAAEQ,cAJV;AAKE,QAAA,QAAQ,EAAEF;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWGF,iBAAiB,iBAChB;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAcE;AAAK,MAAA,SAAS,EAAEoB,mBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,KAAK,EAAEZ,YAHT;AAIE,QAAA,MAAM,EAAEI,eAJV;AAKE,QAAA,QAAQ,EAAED;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,EAwBGD,kBAAkB,iBACjB;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBJ,eA4BE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACK,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAlFD;;GAAMtB,W;UAQAD,Q,EASAA,Q;;;KAjBAC,W;AAoFN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport useInput from \"../hooks/useInput\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameInputIsValid,\n    hasError: nameInputHasError,\n    handleValueChange: handleNameChange,\n    handleInputBlur: handleNameBlur,\n    resetForm: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    handleValueChange: handleEmailChange,\n    handleInputBlur: handleEmailBlur,\n    resetForm: resetEmailInput,\n  } = useInput((value) =>\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n      value\n    )\n  );\n\n  let formIsValid = false;\n\n  if (enteredNameInputIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const handleFormSubmission = (e) => {\n    e.preventDefault();\n\n    if (!enteredNameInputIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const enteredNameClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const enteredEmailClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={handleFormSubmission}>\n      <div className={enteredNameClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onBlur={handleNameBlur}\n          onChange={handleNameChange}\n        />\n      </div>\n      {nameInputHasError && (\n        <p className=\"error-text\">Name must not be empty</p>\n      )}\n      <div className={enteredEmailClasses}>\n        <label htmlFor=\"name\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={enteredEmail}\n          onBlur={handleEmailBlur}\n          onChange={handleEmailChange}\n        />\n      </div>\n      {emailInputHasError && (\n        <p className=\"error-text\">Email must be input correctly</p>\n      )}\n\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}