{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alonz\\\\OneDrive\\\\Escritorio\\\\Udemy React\\\\section 16 forms\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useBasicInput } from \"../hooks/useBasicInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isTouched: enteredNameIsTouched,\n    isValid: nameInputIsValid,\n    hasError: nameInputHasError,\n    handleInputChange,\n    handleInputBlur,\n    reset: resetName\n  } = useBasicInput(value => value.trim() !== \"\"); // const [enteredName, setEnteredName] = useState(\"\");\n  // const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n  // const nameInputIsValid = enteredName.trim() !== \"\";\n  // const handleChangeInputName = (e) => {\n  //   setEnteredName(e.target.value);\n  // };\n  // const handleBlurInputName = () => {\n  //   setEnteredNameIsTouched(true);\n  // };\n\n  const handleFormSubmission = e => {\n    e.preventDefault(); // setEnteredNameIsTouched(true);\n\n    if (!nameInputIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    resetName();\n  }; // const nameInputHasError = !nameInputIsValid && enteredNameIsTouched;\n\n\n  const nameInputClasses = nameInputHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmission,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredName,\n          onChange: handleInputChange,\n          onBlur: handleInputBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name can't be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"g+WNpoETG4meduTPHYTr5qyMaiA=\", false, function () {\n  return [useBasicInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["C:/Users/alonz/OneDrive/Escritorio/Udemy React/section 16 forms/src/components/BasicForm.js"],"names":["useBasicInput","BasicForm","props","value","enteredName","isTouched","enteredNameIsTouched","isValid","nameInputIsValid","hasError","nameInputHasError","handleInputChange","handleInputBlur","reset","resetName","trim","handleFormSubmission","e","preventDefault","console","log","nameInputClasses"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,wBAA9B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AACJC,IAAAA,KAAK,EAAEC,WADH;AAEJC,IAAAA,SAAS,EAAEC,oBAFP;AAGJC,IAAAA,OAAO,EAAEC,gBAHL;AAIJC,IAAAA,QAAQ,EAAEC,iBAJN;AAKJC,IAAAA,iBALI;AAMJC,IAAAA,eANI;AAOJC,IAAAA,KAAK,EAAEC;AAPH,MAQFd,aAAa,CAAEG,KAAD,IAAWA,KAAK,CAACY,IAAN,OAAiB,EAA7B,CARjB,CAD2B,CAW3B;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,oBAAoB,GAAIC,CAAD,IAAO;AAClCA,IAAAA,CAAC,CAACC,cAAF,GADkC,CAElC;;AACA,QAAI,CAACV,gBAAL,EAAuB;AACrB;AACD;;AACDW,IAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ;AACAU,IAAAA,SAAS;AACV,GARD,CAvB2B,CAiC3B;;;AAEA,QAAMO,gBAAgB,GAAGX,iBAAiB,GACtC,sBADsC,GAEtC,cAFJ;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEM,oBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEK,gBAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,MAFL;AAGE,UAAA,KAAK,EAAEjB,WAHT;AAIE,UAAA,QAAQ,EAAEO,iBAJZ;AAKE,UAAA,MAAM,EAAEC;AALV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAWGF,iBAAiB,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXxB,eAYE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,eAsBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAnED;;GAAMT,S;UASAD,a;;;KATAC,S;AAqEN,eAAeA,SAAf","sourcesContent":["import { useBasicInput } from \"../hooks/useBasicInput\";\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredName,\n    isTouched: enteredNameIsTouched,\n    isValid: nameInputIsValid,\n    hasError: nameInputHasError,\n    handleInputChange,\n    handleInputBlur,\n    reset: resetName,\n  } = useBasicInput((value) => value.trim() !== \"\");\n\n  // const [enteredName, setEnteredName] = useState(\"\");\n  // const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n\n  // const nameInputIsValid = enteredName.trim() !== \"\";\n\n  // const handleChangeInputName = (e) => {\n  //   setEnteredName(e.target.value);\n  // };\n  // const handleBlurInputName = () => {\n  //   setEnteredNameIsTouched(true);\n  // };\n\n  const handleFormSubmission = (e) => {\n    e.preventDefault();\n    // setEnteredNameIsTouched(true);\n    if (!nameInputIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    resetName();\n  };\n\n  // const nameInputHasError = !nameInputIsValid && enteredNameIsTouched;\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={handleFormSubmission}>\n      <div className=\"control-group\">\n        <div className={nameInputClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={enteredName}\n            onChange={handleInputChange}\n            onBlur={handleInputBlur}\n          />\n        </div>\n        {nameInputHasError && <p>Name can't be empty</p>}\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">Last Name</label>\n          <input type=\"text\" id=\"name\" />\n        </div>\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input type=\"text\" id=\"name\" />\n      </div>\n      <div className=\"form-actions\">\n        <button type=\"submit\">Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}