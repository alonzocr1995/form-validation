{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useBasicInput = validateInput => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [IsTouched, setIsTouched] = useState(false);\n  const nameInputIsValid = validateInput(enteredValue);\n  const hasError = !nameInputIsValid && IsTouched;\n\n  const handleInputChange = e => {\n    setEnteredValue(e.target.value);\n  };\n\n  const handleInputBlur = () => {\n    setIsTouched(true);\n  };\n\n  return {\n    value: enteredValue,\n    IsTouched,\n    hasError,\n    handleInputBlur,\n    handleInputChange\n  };\n};\n\n_s(useBasicInput, \"mYwgI4YcwyPI2vb0GrFOHeWamr0=\");\n\nexport default useBasicInput;","map":{"version":3,"sources":["C:/Users/alonz/OneDrive/Escritorio/Udemy React/section 16 forms/src/hooks/useBasicInput.js"],"names":["useState","useBasicInput","validateInput","enteredValue","setEnteredValue","IsTouched","setIsTouched","nameInputIsValid","hasError","handleInputChange","e","target","value","handleInputBlur"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,aAAa,GAAIC,aAAD,IAAmB;AAAA;;AACvC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMO,gBAAgB,GAAGL,aAAa,CAACC,YAAD,CAAtC;AACA,QAAMK,QAAQ,GAAG,CAACD,gBAAD,IAAqBF,SAAtC;;AAEA,QAAMI,iBAAiB,GAAIC,CAAD,IAAO;AAC/BN,IAAAA,eAAe,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD,GAFD;;AAGA,QAAMC,eAAe,GAAG,MAAM;AAC5BP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,SAAO;AACLM,IAAAA,KAAK,EAAET,YADF;AAELE,IAAAA,SAFK;AAGLG,IAAAA,QAHK;AAILK,IAAAA,eAJK;AAKLJ,IAAAA;AALK,GAAP;AAOD,CApBD;;GAAMR,a;;AAsBN,eAAeA,aAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useBasicInput = (validateInput) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [IsTouched, setIsTouched] = useState(false);\r\n  const nameInputIsValid = validateInput(enteredValue);\r\n  const hasError = !nameInputIsValid && IsTouched;\r\n\r\n  const handleInputChange = (e) => {\r\n    setEnteredValue(e.target.value);\r\n  };\r\n  const handleInputBlur = () => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    IsTouched,\r\n    hasError,\r\n    handleInputBlur,\r\n    handleInputChange,\r\n  };\r\n};\r\n\r\nexport default useBasicInput;\r\n"]},"metadata":{},"sourceType":"module"}