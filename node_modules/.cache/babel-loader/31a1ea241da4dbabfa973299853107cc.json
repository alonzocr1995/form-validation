{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alonz\\\\OneDrive\\\\Escritorio\\\\Udemy React\\\\section 16 forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredEmailIsValid = () => /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email);\n\n  console.log(enteredEmailIsValid(\"alonzo@gamil@.com\"));\n  const enteredNameInputIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInvalid = !enteredNameInputIsValid && enteredNameTouched;\n  let formIsValid = false;\n\n  if (enteredNameInputIsValid) {\n    formIsValid = true;\n  }\n\n  const handleInputChangeName = e => {\n    setEnteredName(e.target.value);\n\n    if (e.target.value.trim() !== \"\") {}\n  };\n\n  const handleNameInputBlur = () => {\n    setEnteredNameTouched(true);\n  };\n\n  const handleFormSubmission = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      return;\n    }\n\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n\n  const enteredNameClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmission,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: enteredNameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onBlur: handleNameInputBlur,\n        onChange: handleInputChangeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"7mbcKiXjVGMFGputbaLO//xTxzE=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/alonz/OneDrive/Escritorio/Udemy React/section 16 forms/src/components/SimpleInput.js"],"names":["React","useEffect","useState","SimpleInput","props","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNameTouched","setEnteredNameTouched","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","test","email","console","log","enteredNameInputIsValid","trim","nameInputIsInvalid","formIsValid","handleInputChangeName","e","target","value","handleNameInputBlur","handleFormSubmission","preventDefault","enteredNameClasses"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredEmailIsValid = () =>\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n      email\n    );\n\n  console.log(enteredEmailIsValid(\"alonzo@gamil@.com\"));\n  const enteredNameInputIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInvalid = !enteredNameInputIsValid && enteredNameTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameInputIsValid) {\n    formIsValid = true;\n  }\n\n  const handleInputChangeName = (e) => {\n    setEnteredName(e.target.value);\n    if (e.target.value.trim() !== \"\") {\n    }\n  };\n  const handleNameInputBlur = () => {\n    setEnteredNameTouched(true);\n  };\n  const handleFormSubmission = (e) => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      return;\n    }\n\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n\n  const enteredNameClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={handleFormSubmission}>\n      <div className={enteredNameClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onBlur={handleNameInputBlur}\n          onChange={handleInputChangeName}\n        />\n      </div>\n      {nameInputIsInvalid && (\n        <p className=\"error-text\">Name must not be empty</p>\n      )}\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">Email</label>\n        <input type=\"email\" id=\"email\" />\n      </div>\n\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}